#!/usr/bin/env ruby

# Today:
# - [20] Meditation. #meditation
#   {started: '9:20', 'finished': '10:20', pomodoros: 4, waiting_for: 'Email from ...'}
# - [20] Dancing.
# - [15] TopTal. #online #work
# - Some cleanup.
# - [90] Write a blog post. #online
# - Plan tomorrow.

require 'pomodoro'

TASK_LIST_PATH = File.expand_path('~/Dropbox/WIP/tasks.todo')
manager = Pomodoro::TaskManager.parse(TASK_LIST_PATH)

case ARGV.shift
when 'postpone'
  # with a reason.
when 'skip'
  # without a reason.
when 'discard'
when 'next'
  abort "No more tasks." if manager.today_tasks.empty?
  task = manager.active_task
  arguments = "#{task.text} #{task.tags.map { |tag| "##{tag}" }.join(' ')} #{task.duration}"
  command = "log-time #{arguments.split(' ').map { |word| "'#{word}'" }.join(' ')}"
  puts command; system command

  manager.mark_active_task_as_done
  manager.save
when 'today'
  unless manager.today_tasks.empty?
    puts manager.today_tasks
  else
    puts "All done!"
  end
when 'punch-off'
  path = File.expand_path("~/Dropbox/WIP/Tasks/#{Time.now.strftime('%Y-%m-%d')}.todo")
  abort "File #{path} already exists!" if File.exists?(path)
  unless ARGV.include?('--dry-run')
    File.open(path, 'w') do |file|
      file.puts(manager.finished_tasks.map do |task|
        tags = task.tags - [:done]
        Pomodoro::Task.new(task.text, task.duration, tags)
      end)
    end
  else
    puts "#{path}:"
    puts(manager.finished_tasks.map do |task|
      tags = task.tags - [:done]
      Pomodoro::Task.new(task.text, task.duration, tags)
    end)
  end

  manager.switch_days
  if ARGV.include?('--dry-run')
    puts "\n\nTomorrow:"
    puts manager.today_tasks
  else
    manager.save
    exec "vim #{TASK_LIST_PATH}"
  end
when 'add', '+'
  manager.add_task_for_later(ARGV.join(' '))
  manager.save
else
  abort "Usage: #{$0} [next|today|add]."
end
