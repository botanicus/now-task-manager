#!/usr/bin/env ruby

# Today:
# - [20] Meditation. #meditation
#   {started: '9:20', 'finished': '10:20', pomodoros: 4}
# - [20] Dancing.
# - [15] TopTal. #online #work
# - Some cleanup.
# - [90] Write a blog post. #online
# - Plan tomorrow.

require 'pomodoro'
manager = Pomodoro::TaskManager.parse(File.expand_path('~/Dropbox/WIP/tasks.todo'))

case ARGV.shift
when 'work'
  abort "No more tasks." if manager.today_tasks.empty?
  puts %Q{log-time #{manager.active_task.to_s[2..-1]}}
  %x{log-time #{manager.active_task.to_s[2..-1].gsub('#', '\#')}}
when 'done'
  manager.mark_active_task_as_done
  manager.save
when 'next'
  system "#{$0} done && #{$0} work"
when 'today'
  unless manager.today_tasks.empty?
    puts manager.today_tasks
  else
    puts "All done!"
  end
when 'punch-off'
  path = File.expand_path("~/Dropbox/WIP/Tasks/#{Time.now.strftime('%Y-%m-%d')}.todo")
  abort "File #{path} already exists!" if File.exists?(path)
  File.open(path, 'w') do |file|
    file.puts(manager.finished_tasks)
  end
  manager.switch_days
  manager.save
when 'add', '+'
  manager.add_task_for_later(ARGV.join(' '))
  manager.save
else
  abort "Usage: #{$0} [work|done|next|today|add]."
end
