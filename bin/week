#!/usr/bin/env ruby

# End of the week reports.
#
# [Usage]
#
# week
# week #work
# week #blog

require 'internet-usage-limiter'

log = InternetUsageLimiter::LogReader.new

def add_day_to_entries(day_midnight, log, buffer)
  return buffer if day_midnight > Time.now # No time travelling.
  entries = InternetUsageLimiter::Reporter.filter_by_tags(log.day_entries(day_midnight), ARGV)
  buffer.merge(day_midnight.strftime('%A %d/%m/%Y') => entries)
end

monday_midnight = Time.now - ((Time.now.wday - 1) * 24 * 60 * 60) - ((Time.now.hour * 60) + Time.now.min) * 60

entries_with_labels = add_day_to_entries(monday_midnight, log, Hash.new)
entries_with_labels = add_day_to_entries(monday_midnight + (1 * 24 * 60 * 60), log, entries_with_labels)
entries_with_labels = add_day_to_entries(monday_midnight + (2 * 24 * 60 * 60), log, entries_with_labels)
entries_with_labels = add_day_to_entries(monday_midnight + (3 * 24 * 60 * 60), log, entries_with_labels)
entries_with_labels = add_day_to_entries(monday_midnight + (4 * 24 * 60 * 60), log, entries_with_labels)
entries_with_labels = add_day_to_entries(monday_midnight + (5 * 24 * 60 * 60), log, entries_with_labels)
entries_with_labels = add_day_to_entries(monday_midnight + (6 * 24 * 60 * 60), log, entries_with_labels)
entries_with_labels = add_day_to_entries(monday_midnight + (7 * 24 * 60 * 60), log, entries_with_labels)

InternetUsageLimiter::Reporter.report(entries_with_labels)
